{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/course-grid/course-grid.component.css","webpack:///./src/app/course-grid/course-grid.component.html","webpack:///./src/app/course-grid/course-grid.component.ts","webpack:///./src/app/course-navigator/course-navigator.component.css","webpack:///./src/app/course-navigator/course-navigator.component.html","webpack:///./src/app/course-navigator/course-navigator.component.ts","webpack:///./src/app/course-viewer/course-viewer.component.css","webpack:///./src/app/course-viewer/course-viewer.component.html","webpack:///./src/app/course-viewer/course-viewer.component.ts","webpack:///./src/app/lesson-tabs/lesson-tabs.component.css","webpack:///./src/app/lesson-tabs/lesson-tabs.component.html","webpack:///./src/app/lesson-tabs/lesson-tabs.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/models/course.model.client.ts","webpack:///./src/app/module-list/module-list.component.css","webpack:///./src/app/module-list/module-list.component.html","webpack:///./src/app/module-list/module-list.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/sections/sections.component.css","webpack:///./src/app/sections/sections.component.html","webpack:///./src/app/sections/sections.component.ts","webpack:///./src/app/services/course.service.client.ts","webpack:///./src/app/services/lesson.service.client.ts","webpack:///./src/app/services/module.service.client.ts","webpack:///./src/app/services/section.service.client.ts","webpack:///./src/app/services/topic.service.client.ts","webpack:///./src/app/services/user.service.client.ts","webpack:///./src/app/services/widget.service.client.ts","webpack:///./src/app/topic-pills/topic-pills.component.css","webpack:///./src/app/topic-pills/topic-pills.component.html","webpack:///./src/app/topic-pills/topic-pills.component.ts","webpack:///./src/app/whiteboard/whiteboard.component.css","webpack:///./src/app/whiteboard/whiteboard.component.html","webpack:///./src/app/whiteboard/whiteboard.component.ts","webpack:///./src/app/widget-list/widget-list.component.css","webpack:///./src/app/widget-list/widget-list.component.html","webpack:///./src/app/widget-list/widget-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"h2 {\\n  font-size: 40px;\\n  font-family: 'Poiret One', cursive;\\n  text-align: center;\\n  margin-top: 20px;\\n  margin-bottom: 50px;\\n  color: rgb(102,51,153);\\n}\\n\\nh3{\\n  margin-top: 100px;\\n  font-family: 'Indie Flower', cursive;\\n\\n}\\n\\na:hover {\\n  cursor:pointer;\\n}\\n\\na.nav-item-link, a{\\n  color: white;\\n}\\n\\n.list-group-item{\\n  border-radius: 20px;\\n  margin : 5px;\\n\\n}\\n\\n.list-group-item:hover{\\n  cursor:pointer;\\n\\n}\\n\\n.fas\\n{\\n  margin-left: 5px;\\n}\\n\\n.btn{\\n  width: 100%;\\n  border-radius: 15px;\\n}\\n\\n.card{\\n  border-radius: 20px;\\n}\\n\"","module.exports = \"<header class=\\\"navbar navbar-expand-lg bg-dark\\\">\\n  <a class=\\\"navbar-brand text-light\\\" href=\\\"home\\\">\\n    Whiteboard <i class=\\\"fas fa-home\\\"></i>\\n  </a>\\n  <ul class=\\\"navbar-nav ml-auto\\\">\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"btn btn-link nav-link nav-item-link\\\" routerLink=\\\"/profile\\\">\\n        Profile<i class=\\\"fas fa-user\\\"></i></a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"btn btn-link nav-link nav-item-link text-light\\\" (click)=\\\"logout()\\\">Logout<i\\n        class=\\\"fas fa-sign-out-alt\\\"></i></a>\\n    </li>\\n  </ul>\\n</header>\\n<h2>Admin</h2>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-2\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li *ngFor=\\\"let course of allCourses\\\"\\n          [ngClass]=\\\"{'active':course.id == courseId}\\\"\\n          (click)=\\\"loadSections(course.id)\\\"\\n          class=\\\"active list-group-item\\\">\\n        {{course.title}}\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\" *ngIf=\\\"courseId < 0\\\">\\n        <h3>Select a course from the left to create/update sections</h3>\\n      </div>\\n      <div class=\\\"col-md-6\\\" *ngIf=\\\"courseId >= 0\\\">\\n        <div class=\\\"card bg-light mb-3\\\">\\n          <div class=\\\"card-header\\\"><h4 class=\\\"p-1\\\">{{selectedCourse.title}}</h4></div>\\n          <div class=\\\"card-title my-auto mx-3\\\">\\n            <h5 class=\\\"p-2\\\">Sections: ({{sections.length}})</h5>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <ul class=\\\"list-group\\\"\\n                *ngFor=\\\"let section of sections\\\">\\n              <li class=\\\"list-group-item\\\">\\n                <a class=\\\"text-dark\\\" (click)=\\\"selectSection(section)\\\">\\n                  {{section.name}}\\n                </a>\\n              </li>\\n            </ul>\\n          </div>\\n          <div class=\\\"card-footer\\\">\\n            <button class=\\\"btn btn-warning\\\"\\n                    (click)=\\\"createSection()\\\">\\n              Add Section\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"container\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-header\\\"><h5 class=\\\"p-2 text-center\\\">{{sectionName}}</h5></div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"form-group\\\">\\n                <input [(ngModel)]=\\\"sectionName\\\"\\n                       placeholder=\\\"Section Name\\\"\\n                       class=\\\"form-control p-2\\\"/>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <input [(ngModel)]=\\\"seats\\\"\\n                       placeholder=\\\"Total Capacity\\\"\\n                       class=\\\"form-control p-2\\\"/>\\n              </div>\\n            </div>\\n            <div class=\\\"card-footer\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6\\\">\\n                  <button (click)=\\\"updateSection(sectionName, seats)\\\"\\n                          class=\\\"btn btn-success\\\">\\n                    Update\\n                  </button>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                  <button (click)=\\\"deleteSection()\\\"\\n                          class=\\\"btn btn-danger\\\">\\n                    Delete\\n                  </button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {SectionServiceClient} from '../services/section.service.client';\nimport {Course} from '../models/course.model.client';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  allCourses: Course[] = [];\n  selectedCourse = new Course();\n  sections = [];\n  courseId = -1;\n  sectionId;\n  sectionName;\n  seats;\n  selectedSection = {};\n\n  constructor(private courseService: CourseServiceClient,\n              private sectionsService: SectionServiceClient,\n              private userService: UserServiceClient,\n              private router: Router) {\n  }\n\n  loadSections(courseId) {\n    this.courseId = courseId;\n    this.sectionsService\n      .findSectionsForCourse(courseId)\n      .then(sections => this.sections = sections)\n      .then(() => this.courseService.findCourseById(courseId))\n      .then(course => {\n        this.selectedCourse = course;\n      });\n  }\n\n  selectSection(section) {\n    this.selectedSection = section;\n    this.sectionName = section.name;\n    this.seats = section.seats;\n    this.sectionId = section._id;\n  }\n\n  logout() {\n    this.userService.logout()\n      .then(() =>\n        this.router.navigate(['login']));\n  }\n\n  createSection() {\n    if (this.courseId !== -1) {\n      let selectedCourse = new Course();\n      this.allCourses.map(course => {\n        if (course.id === this.courseId) {\n          selectedCourse = course;\n        }\n      });\n      if (selectedCourse !== undefined) {\n        const sectionName = selectedCourse.title + ' Section 1';\n        const seats = 20;\n        this\n          .sectionsService\n          .createSection(this.courseId, sectionName, seats)\n          .then(() => {\n            this.loadSections(this.courseId);\n          });\n      }\n    } else {\n      alert('Please select a course first');\n    }\n  }\n\n  deleteSection() {\n    this.sectionsService.deleteSection(this.sectionId)\n      .then(response => {\n        console.log(response);\n        if (response.ok) {\n          alert('Deleted');\n        }\n      }).then(() => this.loadSections(this.courseId));\n  }\n\n  updateSection(sectionName, seats) {\n    const section = {\n      courseId: this.courseId,\n      name: sectionName,\n      seats: seats,\n    };\n    this.sectionsService.updateSection(section, this.sectionId, this.courseId)\n      .then(section => {\n        this.sectionName = section.name;\n        this.seats = section.seats;\n        this.loadSections(this.courseId);\n      });\n  }\n\n  ngOnInit() {\n    this.courseService.findAllCourses()\n      .then(courses => this.allCourses = courses);\n  }\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'webdev-summer2-2018-client-angular-sarthak';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {routing} from './app.routing';\nimport {FormsModule} from '@angular/forms';\n\nimport {AppComponent} from './app.component';\nimport {WhiteboardComponent} from './whiteboard/whiteboard.component';\nimport {CourseServiceClient} from './services/course.service.client';\nimport {CourseNavigatorComponent} from './course-navigator/course-navigator.component';\nimport {LoginComponent} from './login/login.component';\nimport {RegisterComponent} from './register/register.component';\nimport {ProfileComponent} from './profile/profile.component';\nimport {UserServiceClient} from './services/user.service.client';\nimport {SectionsComponent} from './sections/sections.component';\nimport {SectionServiceClient} from './services/section.service.client';\nimport {CourseGridComponent} from './course-grid/course-grid.component';\nimport {CourseViewerComponent} from './course-viewer/course-viewer.component';\nimport {ModuleListComponent} from './module-list/module-list.component';\nimport {LessonTabsComponent} from './lesson-tabs/lesson-tabs.component';\nimport {TopicPillsComponent} from './topic-pills/topic-pills.component';\nimport {ModuleServiceClient} from './services/module.service.client';\nimport {LessonServiceClient} from './services/lesson.service.client';\nimport {TopicServiceClient} from './services/topic.service.client';\nimport {WidgetListComponent} from './widget-list/widget-list.component';\nimport {WidgetServiceClient} from './services/widget.service.client';\nimport {AdminComponent} from './admin/admin.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WhiteboardComponent,\n    CourseNavigatorComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    SectionsComponent,\n    CourseGridComponent,\n    CourseViewerComponent,\n    ModuleListComponent,\n    LessonTabsComponent,\n    TopicPillsComponent,\n    WidgetListComponent,\n    AdminComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    routing\n  ],\n  providers: [\n    CourseServiceClient,\n    UserServiceClient,\n    SectionServiceClient,\n    ModuleServiceClient,\n    LessonServiceClient,\n    TopicServiceClient,\n    WidgetServiceClient\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Routes, RouterModule} from '@angular/router';\nimport {CourseNavigatorComponent} from './course-navigator/course-navigator.component';\nimport {LoginComponent} from './login/login.component';\nimport {RegisterComponent} from './register/register.component';\nimport {ProfileComponent} from './profile/profile.component';\nimport {SectionsComponent} from './sections/sections.component';\nimport {CourseViewerComponent} from './course-viewer/course-viewer.component';\nimport {WhiteboardComponent} from './whiteboard/whiteboard.component';\nimport {AdminComponent} from './admin/admin.component';\n\nconst appRoutes: Routes = [\n  {path: '', redirectTo: 'home', pathMatch: 'full'},\n  {path: 'home', component: WhiteboardComponent},\n  {path: 'courses', component: CourseNavigatorComponent},\n  {path: 'course/:courseId', component: CourseViewerComponent},\n  {path: 'course/:courseId/module/:moduleId', component: CourseViewerComponent},\n  {path: 'course/:courseId/module/:moduleId/lesson/:lessonId', component: CourseViewerComponent},\n  {path: 'course/:courseId/module/:moduleId/lesson/:lessonId/topic/:topicId', component: CourseViewerComponent},\n  {path: 'course/:courseId/section', component: SectionsComponent},\n  {path: 'admin', component: AdminComponent},\n  {path: 'admin/course/:courseId', component: AdminComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'profile', component: ProfileComponent},\n  {path: '**', component: WhiteboardComponent}\n];\n\nexport const routing = RouterModule.forRoot(appRoutes);\n","module.exports = \".card {\\n  margin: 10px;\\n  border-radius: 20px;\\n\\n}\\n\\n.btn\\n{\\n  border-radius: 18px;\\n  margin : 5px;\\n}\\n\"","module.exports = \"<div class=\\\"container my-4\\\" [hidden]=\\\"!isEnrolled\\\">\\n  <div class=\\\"row my-3\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <h2>Enrolled Courses</h2>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n      <div *ngFor=\\\"let ecourse of enrolledCourses\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-body\\\">\\n            <h5 class=\\\"card-title\\\">{{ecourse.title}}</h5>\\n            <p class=\\\"card-text\\\">This is an enrolled course</p>\\n        </div>\\n          <div class=\\\"card-footer\\\">\\n            <a routerLink=\\\"/course\\\"\\n               class=\\\"btn btn-primary\\\">View</a>\\n            <a [hidden]=\\\"isEnrolled\\\"\\n               routerLink=\\\"/course/{{ecourse.id}}/section\\\"\\n               class=\\\"btn btn-success float-right\\\">Enroll</a>\\n          </div>\\n        </div>\\n      </div>\\n  </div>\\n</div>\\n<div class=\\\"container my-4 container-fluid\\\">\\n  <div class=\\\"row\\\">\\n      <div *ngFor=\\\"let course of courses\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-body\\\">\\n            <h5 class=\\\"card-title\\\">{{course.title}}</h5>\\n            <p class=\\\"card-text\\\">This card contains details about the course</p>\\n          </div>\\n          <div class=\\\"card-footer\\\">\\n            <a routerLink=\\\"/course/{{course.id}}\\\"\\n               class=\\\"btn btn-primary\\\">View</a>\\n            <a routerLink=\\\"/course/{{course.id}}/section\\\"\\n               class=\\\"btn btn-success float-right\\\">Sections</a>\\n          </div>\\n        </div>\\n      </div>\\n  </div>\\n</div>\\n\\n\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {Course} from '../models/course.model.client';\nimport {SectionServiceClient} from '../services/section.service.client';\n\n@Component({\n  selector: 'app-course-grid',\n  templateUrl: './course-grid.component.html',\n  styleUrls: ['./course-grid.component.css']\n})\nexport class CourseGridComponent implements OnInit {\n\n  enrolledCourses: Course[] = [];\n  courses: Course[] = [];\n  sections = [];\n  username;\n  isEnrolled = false;\n\n  constructor(private service: CourseServiceClient,\n              private sectionService: SectionServiceClient) {\n  }\n\n  extractAllCourseIdsFromSections() {\n    let courseIds = [];\n    courseIds = this.sections.map(value => value.section.courseId);\n    return courseIds;\n  }\n\n  ngOnInit() {\n\n    this.service.findAllCourses()\n      .then(courses => {\n        this.courses = courses;\n        console.log(courses);\n      });\n\n    this.sectionService\n      .findSectionsForStudent()\n      .then(sections => this.sections = sections)\n      .then((sections) => (\n        this.extractAllCourseIdsFromSections()\n      )).then((courseIds) => {\n      this.service.findEnrolledCoursesForStudent(courseIds)\n        .then(courses => {\n          this.enrolledCourses = courses;\n          if (this.enrolledCourses.length > 0) {\n            this.isEnrolled = true;\n          }\n          console.log(courses);\n        });\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Course Navigator ({{courses.length}})</h1>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-3\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item active\\\">Courses</li>\\n        <li *ngFor=\\\"let course of courses\\\"\\n            (click)=\\\"selectCourse(course.id)\\\"\\n            class=\\\"list-group-item\\\">\\n          {{course.title}}\\n        </li>\\n      </ul>\\n    </div>\\n    <div class=\\\"col-3\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item active\\\">Modules</li>\\n        <li *ngFor=\\\"let module of modules\\\" class=\\\"list-group-item\\\">\\n          {{module.title}}\\n        </li>\\n      </ul>\\n    </div>\\n    <div class=\\\"col-3\\\">lessons</div>\\n    <div class=\\\"col-3\\\">topics</div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CourseServiceClient} from '../services/course.service.client';\n\n@Component({\n  selector: 'app-course-navigator',\n  templateUrl: './course-navigator.component.html',\n  styleUrls: ['./course-navigator.component.css']\n})\nexport class CourseNavigatorComponent implements OnInit {\n\n  constructor(private courseService: CourseServiceClient) {\n  }\n\n  courses = [];\n  modules = [];\n\n  selectCourse(courseId) {\n    this.courseService.findAllModulesForCourses(courseId)\n      .then(modules => this.modules = modules);\n  }\n\n  ngOnInit() {\n    this.courseService.findAllCourses()\n      .then(courses => this.courses = courses);\n  }\n\n}\n","module.exports = \"a.nav-item-link {\\n  color: white;\\n}\\n\\na {\\n  color: white;\\n}\\n\\na:hover.nav-item-link {\\n  color: white;\\n  cursor: pointer;\\n}\\n\\nh4 {\\n  font-size: 20px;\\n  color: white;\\n}\\n\\n.fas\\n{\\nmargin-left: 10px;\\n}\\n\"","module.exports = \"<header class=\\\"navbar navbar-expand-lg bg-dark mb-4\\\">\\n  <a class=\\\"navbar-brand text-light\\\" href=\\\"home\\\">\\n    Whiteboard<i class=\\\"fas fa-home\\\"></i>\\n  </a>\\n  <ul class=\\\"navbar-nav ml-auto\\\">\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link disabled\\\">\\n        <h4>{{course.title}}</h4></a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"btn btn-link nav-link nav-item-link\\\"\\n         (click)=\\\"logout()\\\">\\n        Logout<i class=\\\"fas fa-sign-out-alt\\\"></i>\\n      </a>\\n    </li>\\n  </ul>\\n</header>\\n<div class=\\\"container mx-2\\\">\\n  <app-module-list></app-module-list>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {Course} from '../models/course.model.client';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-course-viewer',\n  templateUrl: './course-viewer.component.html',\n  styleUrls: ['./course-viewer.component.css']\n})\nexport class CourseViewerComponent implements OnInit {\n\n  constructor(private userService: UserServiceClient,\n              private courseService: CourseServiceClient,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.route.params.subscribe(params => this.loadCourse(params['courseId']));\n  }\n\n  course: Course = new Course();\n\n  loadCourse = courseId =>\n    this.courseService.findCourseById(courseId)\n      .then(course => this.course = course)\n\n  logout = () =>\n    this.userService.logout()\n      .then(() => this.router.navigate(['login']))\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".nav-item.liSelected {\\n  background-color: rgb(95,158,160);\\n  color: black !important;\\n}\\n\\n.liSelected {\\n  font-family: 'Love Ya Like A Sister', cursive;\\n  font-size: 20px;\\nborder-color: darkblue;\\n}\\n\\n.liSelected a {\\n  color: white;\\n  font-weight: bolder;\\n}\\n\\na {\\n  color: black;\\n  font-weight: bold;\\n}\\n\\n\\n\\n\\n\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg nav-tabs pt-2\\\">\\n  <ul class=\\\"nav nav-tabs\\\">\\n    <li *ngFor=\\\"let lesson of lessons\\\"\\n        class=\\\"nav-item\\\"\\n        [ngClass]=\\\"{'liSelected': lesson.id == lessonId}\\\">\\n      <a class=\\\"nav-link liSelected\\\"\\n         routerLink=\\\"/course/{{courseId}}/module/{{moduleId}}/lesson/{{lesson.id}}\\\">\\n        {{lesson.title}}\\n      </a>\\n    </li>\\n  </ul>\\n</nav>\\n<div class=\\\"container my-4\\\">\\n  <app-topic-pills></app-topic-pills>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {LessonServiceClient} from '../services/lesson.service.client';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-lesson-tabs',\n  templateUrl: './lesson-tabs.component.html',\n  styleUrls: ['./lesson-tabs.component.css']\n})\nexport class LessonTabsComponent implements OnInit {\n\n  constructor(private service: LessonServiceClient,\n              private userService: UserServiceClient,\n              private router: Router,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  courseId;\n  moduleId;\n  lessonId;\n  lessons = [];\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.lessonId = params['lessonId'];\n    this.loadLessons(this.courseId, this.moduleId);\n  }\n\n  loadLessons(courseId, moduleId) {\n    this.moduleId = moduleId;\n    this.service.findLessonsForModule(courseId, moduleId)\n      .then(lessons => this.lessons = lessons);\n  }\n\n\n  logout = () =>\n    this.userService.logout()\n      .then(() => this.router.navigate(['login']))\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\nh2 {\\n  font-size: 40px;\\n  font-family: 'Poiret One', cursive;\\n  text-align: center;\\n  margin-top: 50px;\\n  margin-bottom: 50px;\\n  color: rgb(102,51,153);\\n}\\n\\n.btn {\\n  border-radius: 20px;\\n}\\n\\n.regLink {\\n  margin-left: 15px;\\n}\\n\\n#homeLink {\\n  text-align: center;\\n  margin-top: 100px;\\n}\\n\\n.fa {\\n  color: rgb(139,0,0);\\n}\\n\"","module.exports = \"<header class=\\\"navbar navbar-expand-lg bg-dark\\\">\\n  <a class=\\\"navbar-brand text-light\\\" href=\\\"home\\\">\\n    Whiteboard <i class=\\\"fas fa-home\\\"></i>\\n  </a></header>\\n<h2>Login</h2>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div>\\n      <div class=\\\"form-group\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"Username\\\"\\n               [(ngModel)]=\\\"username\\\" required>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <input type=\\\"password\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\">\\n      </div>\\n      <div id=\\\"container\\\" class=\\\"form-group\\\">\\n        <button (click)=\\\"login(username, password)\\\"\\n                class=\\\"btn btn-info btn-block\\\">\\n          Submit\\n        </button>\\n      </div>\\n      <span>Not yet registered?</span><a class=\\\"nav-item-link regLink\\\" routerLink=\\\"/register\\\">Sign Up</a>\\n      <div id=\\\"homeLink\\\">\\n        <a class=\\\"nav-item-link\\\" routerLink=\\\"/home\\\">\\n          <i class=\\\"fa-2x fa fa-home\\\"></i>\\n        </a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username;\n  password;\n\n  login = (username, password) => this.userService\n    .login(username, password)\n    .then(user => this.router.navigate(['profile']), () => alert('Not found!'))\n\n\n  constructor(private router: Router,\n              private userService: UserServiceClient) {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","export class Course {\n  id: number;\n  title: string;\n}\n","module.exports = \".moduleHeading\\n{\\n  font-family: 'Poiret One', cursive;\\n  color: rgb(102,51,153);\\n  font-size: 30px;\\n  background-color: rgb(255,228,225);\\n  font-weight: bold;\\n  text-align: center;\\n\\n}\\n\\n.liSelected{\\n  font-family: 'Love Ya Like A Sister', cursive;\\n  font-size: 20px;\\n}\\n\\n.list-group-item.liSelected{\\n  background-color: rgb(95,158,160);\\n}\\n\\n.liSelected a{\\n  color: white;\\n  font-weight: bolder;\\n}\\n\\na {\\n  color: rgb(128,0,0);\\n  font-weight: bold;\\n}\\n\\na.nav-item-link {\\n  color: white;\\n}\\n\\na:hover.nav-item-link{\\n  color: white;\\n  cursor: pointer;\\n}\\n\"","module.exports = \"<div class=\\\"row mb-4\\\">\\n  <div class=\\\"col-md-4 pb-2\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item moduleHeading\\\">\\n        Modules\\n      </li>\\n      <li [ngClass]=\\\"{'liSelected': module.id == moduleId}\\\"\\n          *ngFor=\\\"let module of modules\\\"\\n          class=\\\"list-group-item\\\">\\n        <a class=\\\"liSelected\\\" routerLink=\\\"/course/{{courseId}}/module/{{module.id}}\\\">\\n          {{module.title}}</a>\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <app-lesson-tabs></app-lesson-tabs>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ModuleServiceClient} from '../services/module.service.client';\n\n@Component({\n  selector: 'app-module-list',\n  templateUrl: './module-list.component.html',\n  styleUrls: ['./module-list.component.css']\n})\nexport class ModuleListComponent implements OnInit {\n\n  constructor(private service: ModuleServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  courseId;\n  moduleId;\n  modules = [];\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.loadModules(this.courseId);\n  }\n\n  loadModules(courseId) {\n    this.courseId = courseId;\n    this.service.findModulesForCourse(courseId)\n      .then(modules => this.modules = modules);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".nav-item-link {\\n  color: white;\\n}\\n\\na.nav-item-link {\\n  color: white;\\n}\\n\\na:hover.nav-item-link{\\n  color: white;\\n  cursor: pointer;\\n}\\n\\n.adminColumnTwo{\\n  margin-top: 200px;\\n}\\n\\nh2 {\\n  font-size: 40px;\\n  font-family: 'Poiret One', cursive;\\n  text-align: center;\\n  margin-top: 20px;\\n  margin-bottom: 50px;\\n  color: rgb(102,51,153);\\n}\\n\\n.fas\\n{\\n  margin-left: 10px;\\n}\\n\\n.btn-success{\\n  border-radius: 15px;\\n  width: 50%;\\n  margin-left: 150px;\\n}\\n\\n.profileContainer{\\n\\n  margin-top : 20px;\\n}\\n\\n.courseContainer{\\n  margin: 20px 50px 4px 200px;\\n}\\n\\n.list-group-item{\\n  margin-right:20px;\\n  width: 110%;\\n}\\n\"","module.exports = \"<header class=\\\"navbar navbar-expand-lg bg-dark\\\">\\n  <a class=\\\"navbar-brand text-light\\\" href=\\\"home\\\">Whiteboard<i class=\\\"fas fa-home\\\"></i></a>\\n  <ul class=\\\"navbar-nav ml-auto\\\">\\n    <li class=\\\"nav-item\\\" [hidden]=\\\"!isAdmin\\\">\\n      <a class=\\\"btn btn-link nav-link nav-item-link\\\" routerLink=\\\"/admin\\\">Edit Sections<i class=\\\"fas fa-edit\\\"></i>\\n      </a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"btn btn-link nav-link nav-item-link\\\" (click)=\\\"logout()\\\">Logout<i class=\\\"fas fa-sign-out-alt\\\"></i></a>\\n    </li>\\n  </ul>\\n</header>\\n<div class=\\\"container-fluid justify-content-center pageContainer\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6\\\">\\n      <div class=\\\"container profileContainer\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-lg-12\\\">\\n                <h2>Profile</h2>\\n                <form>\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"col-sm-12\\\">\\n                      <input [(ngModel)]=\\\"username\\\"\\n                             class=\\\"form-control\\\"\\n                             [ngModelOptions]=\\\"{standalone: true}\\\"\\n                             disabled=\\\"\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"col-sm-12\\\">\\n                      <input type=\\\"password\\\"\\n                             [(ngModel)]=\\\"password\\\"\\n                             class=\\\"form-control\\\"\\n                             placeholder=\\\"Enter new password\\\"\\n                             [ngModelOptions]=\\\"{standalone: true}\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"col-sm-12\\\">\\n                      <input [(ngModel)]=\\\"firstName\\\"\\n                             class=\\\"form-control\\\"\\n                             placeholder=\\\"First Name\\\"\\n                             [ngModelOptions]=\\\"{standalone: true}\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"col-sm-12\\\">\\n                      <input [(ngModel)]=\\\"lastName\\\" class=\\\"form-control\\\"\\n                             placeholder=\\\"Last Name\\\"\\n                             [ngModelOptions]=\\\"{standalone: true}\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"col-sm-12\\\">\\n                      <input type=\\\"text\\\"\\n                             [(ngModel)]=\\\"phone\\\"\\n                             class=\\\"form-control\\\"\\n                             placeholder=\\\"(617)xxx-xxxx\\\"\\n                             [ngModelOptions]=\\\"{standalone: true}\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"col-sm-12\\\">\\n                      <input type=\\\"email\\\"\\n                             [(ngModel)]=\\\"email\\\"\\n                             class=\\\"form-control\\\"\\n                             placeholder=\\\"Email\\\"\\n                             [ngModelOptions]=\\\"{standalone: true}\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"col-sm-12\\\">\\n                      <input [(ngModel)]=\\\"address\\\" class=\\\"form-control\\\"\\n                             placeholder=\\\"Address\\\"\\n                             [ngModelOptions]=\\\"{standalone: true}\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"col-sm-12\\\">\\n                      <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"update()\\\">\\n                        Update\\n                      </button>\\n                    </div>\\n                  </div>\\n                </form>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-6 adminColumnTwo\\\" [hidden]=\\\"!isAdmin\\\">\\n      <h2>Welcome Admin</h2>\\n      <h2>Please edit Sections from Navbar</h2>\\n    </div>\\n    <div class=\\\"col-lg-6\\\" [hidden]=\\\"isAdmin\\\">\\n      <div class=\\\"container-fluid courseContainer\\\">\\n        <div class=\\\"row col-lg-12 mb-4\\\">\\n          <h2>You're enrolled in :</h2>\\n          <div class=\\\"col-md-6\\\">\\n            <ul class=\\\"list-group sectionList\\\" *ngFor=\\\"let enrollment of sections\\\">\\n              <li class=\\\"list-group-item\\\">\\n                <div class=\\\"offset-1  font-weight-light\\\">\\n                  <a routerLink=\\\"/course/{{enrollment.section.courseId}}/section/\\\">\\n                    {{enrollment.section.name}} :\\n                    ({{enrollment.section.availableSeats}}/{{enrollment.section.seats}})\\n                  </a>\\n                </div>\\n              </li>\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {Router} from '@angular/router';\nimport {SectionServiceClient} from '../services/section.service.client';\nimport {CourseServiceClient} from '../services/course.service.client';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private userService: UserServiceClient,\n              private sectionService: SectionServiceClient,\n              private courseService: CourseServiceClient,\n              private router: Router) {\n  }\n\n  id;\n  isAdmin;\n  username;\n  password;\n  firstName;\n  lastName;\n  address;\n  email;\n  phone;\n\n  user = {\n    username: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    address: ''\n  };\n\n  sections = [];\n\n  validateField(field) {\n    return field !== undefined && field !== '';\n  }\n\n  validateProfileForm(user) {\n    const {username} = user;\n    const {email} = user;\n    const {phone} = user;\n    const {firstName} = user;\n    const {lastName} = user;\n    const {address} = user;\n    return this.validateField(username) &&\n      this.validateField(email) &&\n      this.validateField(firstName) &&\n      this.validateField(lastName) &&\n      this.validateField(phone) &&\n      this.validateField(address);\n  }\n\n  update() {\n    this.user = {\n      username: this.username,\n      password: this.password,\n      firstName: this.firstName,\n      lastName: this.lastName,\n      address: this.address,\n      phone: this.phone,\n      email: this.email\n    };\n\n    if (this.validateProfileForm(this.user)) {\n      this.userService.updateUser(this.user)\n        .then(\n          (user) => {\n            alert('Updated successfully');\n            console.log({user});\n          }\n        )\n      ;\n    }\n  }\n\n\n  logout = () => this.userService.logout()\n    .then(() => this.router.navigate(['login']))\n\n\n  ngOnInit() {\n    this\n      .userService.profile()\n      .then(users => {\n        const user = users[0];\n        console.log(user);\n        if (this.validateProfileForm(user)) {\n          this.username = user.username;\n          this.password = user.password;\n          this.firstName = user.firstName;\n          this.lastName = user.lastName;\n          this.address = user.address;\n          this.phone = user.phone;\n          this.email = user.email;\n        }\n        this.username = user.username;\n      });\n\n    this.sectionService\n      .findSectionsForStudent()\n      .then(sections => this.sections = sections);\n\n    this.userService.authenticate()\n      .then(response => {\n        this.isAdmin = response.username !== undefined && response.username === 'admin';\n      });\n  }\n\n}\n","module.exports = \"\\nh2 {\\n  font-size: 40px;\\n  font-family: 'Poiret One', cursive;\\n  text-align: center;\\n  margin-top: 50px;\\n  margin-bottom: 50px;\\n  color: rgb(102,51,153);\\n}\\n\\n.btn {\\n  border-radius: 20px;\\n}\\n\\n.regLink {\\n  margin-left: 15px;\\n}\\n\\n#homeLink {\\n  text-align: center;\\n  margin-top: 100px;\\n}\\n\\n.fa {\\n  color: rgb(139, 0, 0);\\n}\\n\\n.fas{\\n  margin-left: 10px;\\n}\\n\"","module.exports = \"<header class=\\\"navbar navbar-expand-lg bg-dark\\\">\\n  <a class=\\\"navbar-brand text-light\\\" href=\\\"home\\\">\\n    Whiteboard<i class=\\\"fas fa-home\\\"></i>\\n  </a></header>\\n<h2>Registration</h2>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div>\\n      <div class=\\\"form-group\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"Enter a username\\\"\\n               [(ngModel)]=\\\"username\\\" required/>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <input type=\\\"password\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"Enter a password\\\"\\n               [(ngModel)]=\\\"password\\\"/>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <input type=\\\"password\\\"\\n               placeholder=\\\"Re-enter a password\\\"\\n               [(ngModel)]=\\\"password2\\\"\\n               class=\\\"form-control\\\"\\n               [ngClass]=\\\"{'border-danger': invalid == true}\\\"\\n               (ngModelChange)=\\\"validatePassword(password2)\\\"/>\\n      </div>\\n      <div id=\\\"container\\\" class=\\\"form-group\\\">\\n        <button (click)=\\\"register(username, password, password2)\\\"\\n                class=\\\"btn btn-info btn-block\\\">\\n          Submit\\n        </button>\\n      </div>\\n      <span>Already registered?</span><a class=\\\"nav-item-link regLink\\\" routerLink=\\\"/login\\\">Log in</a>\\n      <div id=\\\"homeLink\\\">\\n        <a class=\\\"nav-item-link\\\" routerLink=\\\"/home\\\">\\n          <i class=\\\"fa-2x fa fa-home\\\"></i>\\n        </a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n\n  username;\n  password;\n  password2;\n  invalid;\n\n\n  constructor(private router: Router, private userService: UserServiceClient) {\n  }\n\n  validatePassword = (password2) =>\n    this.invalid = !this.password.includes(password2)\n\n  register(username, password, password2) {\n    if (password === password2) {\n      this.userService\n        .createUser(username, password)\n        .then(response => response.json())\n        .then(response => {\n          if (response.message !== undefined) {\n            alert(response.message);\n          } else {\n            this.router.navigate(['profile']);\n          }\n        });\n    } else {\n      this.invalid = true;\n      alert('Passwords don\\'t match');\n    }\n  }\n\n  ngOnInit() {\n    this.invalid = false;\n  }\n\n}\n","module.exports = \".btn {\\n  width: 50%;\\n  margin-left: 100px;\\n  border-radius: 20px;\\n}\\n\\na.nav-item-link {\\n  color: white;\\n}\\n\\na {\\n  color: white;\\n}\\n\\na:hover.nav-item-link {\\n  color: white;\\n  cursor: pointer;\\n}\\n\\n.fas {\\n  margin-left: 10px;\\n}\\n\\n.list-group-item {\\n  border-radius: 20px;\\n  background-color: rgb(240, 255, 255);\\n  margin-bottom: 10px;\\n}\\n\\nh2 {\\n  font-size: 40px;\\n  font-family: 'Poiret One', cursive;\\n  text-align: center;\\n  margin-top: 20px;\\n  margin-bottom: 50px;\\n  color: rgb(102, 51, 153);\\n}\\n\\n.form-control {\\n  border-radius: 20px;\\n}\\n\\n.btn-danger{\\n  margin-top: 5px;\\n}\\n\"","module.exports = \"<header class=\\\"navbar navbar-expand-lg bg-dark\\\">\\n  <a class=\\\"navbar-brand text-light\\\" href=\\\"home\\\">\\n    Whiteboard<i class=\\\"fas fa-home\\\"></i></a>\\n  <ul class=\\\"navbar-nav ml-auto\\\">\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"btn btn-link nav-link nav-item-link\\\" routerLink=\\\"/profile\\\">Profile<i class=\\\"fas fa-user\\\"></i></a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"btn btn-link nav-link nav-item-link\\\" (click)=\\\"logout()\\\">Logout<i class=\\\"fas fa-sign-out-alt\\\"></i></a>\\n    </li>\\n  </ul>\\n</header>\\n<h2>Sections for {{course.title}}</h2>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n      <div class=\\\"container mt-4\\\" [hidden]=\\\"!isAdmin\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"form-group\\\">\\n              <input [(ngModel)]=\\\"sectionName\\\"\\n                     placeholder=\\\"Section Name\\\"\\n                     class=\\\"form-control\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"form-group\\\">\\n              <input [(ngModel)]=\\\"seats\\\"\\n                     placeholder=\\\"Seats available\\\"\\n                     class=\\\"form-control\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <button (click)=\\\"createSection(sectionName, seats)\\\" class=\\\"btn btn-success btn-block\\\">\\n              Add Section\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-8\\\">\\n      <div class=\\\"container mt-4\\\">\\n        <ul class=\\\"list-group\\\">\\n          <li *ngFor=\\\"let section of sections\\\" class=\\\"list-group-item\\\">\\n            {{section.name}} ({{section.availableSeats}}/{{section.seats}})\\n            <button [hidden]=\\\"isAdmin\\\" (click)=\\\"enroll(section)\\\"\\n                    class=\\\"float-right btn btn-success ml-2 pl-2\\\"\\n                    [ngClass]=\\\"{'disabled': section.availableSeats == 0 }\\\">\\n              Enroll\\n            </button>\\n            <button [hidden]=\\\"isAdmin\\\" (click)=\\\"deEnroll(section)\\\"\\n                    class=\\\"float-right btn btn-danger\\\"\\n                    [ngClass]=\\\"{'disabled': section.availableSeats == section.seats}\\\">De-enroll\\n            </button>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {SectionServiceClient} from '../services/section.service.client';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {Course} from '../models/course.model.client';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-sections',\n  templateUrl: './sections.component.html',\n  styleUrls: ['./sections.component.css']\n})\nexport class SectionsComponent implements OnInit {\n\n  constructor(private sectionService: SectionServiceClient,\n              private router: Router,\n              private authService: UserServiceClient,\n              private courseService: CourseServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.loadSections(params['courseId']));\n  }\n\n  isAdmin = false;\n  sectionName = '';\n  seats = 0;\n  courseId = '';\n  sections = [];\n  course = new Course();\n\n  findCourseById = courseId =>\n    this.courseService.findCourseById(courseId)\n      .then(course => this.course = course)\n\n  loadSections(courseId) {\n    this.courseId = courseId;\n    this\n      .sectionService\n      .findSectionsForCourse(courseId)\n      .then(sections => this.sections = sections)\n      .then(() => this.findCourseById(courseId));\n  }\n\n  logout = () =>\n    this.authService.logout()\n      .then(() => this.router.navigate(['login']))\n\n  createSection(sectionName, seats) {\n    if (sectionName === '' && this.course !== undefined) {\n      sectionName = this.course.title + ' Section 1';\n    }\n    if (seats === 0) {\n      seats = 20;\n    }\n    this\n      .sectionService\n      .createSection(this.courseId, sectionName, seats)\n      .then(() => {\n        this.loadSections(this.courseId);\n      });\n  }\n\n  enroll = section =>\n    this.sectionService.enrollStudentInSection(section._id)\n      .then(() => (this.loadSections(this.courseId)))\n\n  deEnroll = section =>\n    this.sectionService.deEnroll(section._id)\n      .then(() => (this.loadSections(this.courseId)))\n\n  ngOnInit() {\n    this.authService.authenticate()\n      .then(user => {\n        if (user.username !== undefined && user.username !== '') {\n          if (user.username === 'admin') {\n            this.isAdmin = true;\n            console.log('user: ' + user.username);\n          }\n        } else {\n          this.router.navigate(['login']);\n        }\n      });\n  }\n\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class CourseServiceClient {\n\n\n  findAllCourses = () =>\n    fetch('https://sarthakwebdev.herokuapp.com/api/course')\n      .then(response => response.json())\n\n\n  findCourseById = courseId =>\n    fetch('https://sarthakwebdev.herokuapp.com/api/course' + '/' + courseId)\n      .then(response => response.json())\n\n\n  findAllModulesForCourses = (courseId) =>\n    fetch('https://sarthakwebdev.herokuapp.com/api/course/' + courseId + '/module')\n      .then(response => response.json())\n\n\n  findEnrolledCoursesForStudent(courseIds) {\n    return fetch('https://sarthakwebdev.herokuapp.com/api/courses', {\n      method: 'POST',\n      body: JSON.stringify(courseIds),\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then((response) => (response.json()));\n  }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class LessonServiceClient {\n\n  findLessonsForModule = (courseId, moduleId) =>\n    fetch('https://sarthakwebdev.herokuapp.com/api/course/' + courseId + '/module/' + moduleId + '/lesson')\n      .then(response => response.json())\n\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class ModuleServiceClient {\n\n  findModulesForCourse = courseId =>\n    fetch('https://sarthakwebdev.herokuapp.com/api/course/CID/module'.replace('CID', courseId))\n      .then(response => response.json())\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class SectionServiceClient {\n\n\n  deEnroll = sectionId =>\n    fetch('https://sarthakwebdevnode.herokuapp.com/api/section/' + sectionId + '/deRegister', {\n      method: 'DELETE',\n      credentials: 'include',\n    })\n\n\n  enrollStudentInSection = sectionId =>\n    fetch('https://sarthakwebdevnode.herokuapp.com/api/section/' + sectionId + '/enrollment', {\n      method: 'post',\n      credentials: 'include'\n    })\n\n  findAllSections = () =>\n    fetch('https://sarthakwebdevnode.herokuapp.com/api/section')\n      .then(response => response.json())\n\n\n  findSectionsForCourse = courseId =>\n    fetch('https://sarthakwebdevnode.herokuapp.com/api/course/' + courseId + '/section')\n      .then(response => response.json())\n\n\n  findSectionsForStudent = () =>\n    fetch('https://sarthakwebdevnode.herokuapp.com/api/student/section', {\n      credentials: 'include'\n    }).then(response => response.json())\n\n\n  createSection = (courseId, name, seats) => {\n    const section = {courseId, name, seats, availableSeats: seats};\n    return fetch('https://sarthakwebdevnode.herokuapp.com/api/course/CID/section'.replace('CID', courseId), {\n      method: 'post',\n      body: JSON.stringify(section),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n\n  deleteSection = sectionId =>\n    fetch('https://sarthakwebdevnode.herokuapp.com/api/section/SID/delete'.replace('SID', sectionId), {\n      method: 'DELETE',\n      credentials: 'include'\n    })\n\n  updateSection = (section, sectionId, courseId) => {\n    const url = 'https://sarthakwebdevnode.herokuapp.com/api/course/' + courseId + '/section/SID/update';\n    return fetch(url.replace('SID', sectionId), {\n      method: 'PUT',\n      credentials: 'include',\n      body: JSON.stringify(section),\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then((response => response.json()));\n  }\n\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class TopicServiceClient {\n\n  findAllTopicsForLesson = (courseId, moduleId, lessonId) =>\n    fetch('https://sarthakwebdev.herokuapp.com/api/course/' + courseId + '/module/' + moduleId + '/lesson/' + lessonId + '/topic/')\n      .then(response => response.json())\n\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class UserServiceClient {\n\n\n  login = (username, password) => {\n    const credentials = {\n      username: username,\n      password: password\n    };\n    return fetch('https://sarthakwebdevnode.herokuapp.com/api/login', {\n      method: 'post',\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    });\n  }\n\n\n  updateUser = user =>\n    fetch('https://sarthakwebdevnode.herokuapp.com/api/user/update', {\n      method: 'PUT',\n      credentials: 'include',\n      body: JSON.stringify(user),\n      headers: {\n        'content-type': 'application/json'\n      }\n    })\n      .then(response => response.json())\n\n\n  currentUser = () =>\n    fetch('https://sarthakwebdevnode.herokuapp.com/currentUser', {\n      credentials: 'include'\n    }).then(response => response.json())\n\n\n  logout = () =>\n    fetch('https://sarthakwebdevnode.herokuapp.com/api/logout', {\n      method: 'post',\n      credentials: 'include'\n    })\n\n\n  profile = () =>\n    fetch('https://sarthakwebdevnode.herokuapp.com/api/profile', {\n      credentials: 'include',\n    }).then(response => response.json())\n\n\n  createUser = (username, password) => {\n    const user = {\n      username: username,\n      password: password\n    };\n    return fetch('https://sarthakwebdevnode.herokuapp.com/api/user', {\n      body: JSON.stringify(user),\n      credentials: 'include',\n      method: 'post',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n\n  authenticate = () =>\n    fetch('https://sarthakwebdevnode.herokuapp.com/api/auth', {\n      credentials: 'include'\n    }).then(response => (response.json()))\n\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class WidgetServiceClient {\n\n  findWidgetsForTopic = topicId =>\n    fetch('https://sarthakwebdev.herokuapp.com/api/topic/' + topicId + '/widget')\n      .then(response => response.json())\n}\n","module.exports = \".nav-link.liSelected {\\n  background-color: rgb(95,158,160);\\n  color: black !important;\\n  font-family: 'Love Ya Like A Sister', cursive;\\n  font-size: 20px;\\n\\n}\\n\\n.liSelected {\\n  font-family: 'Love Ya Like A Sister', cursive;\\n  color: black;\\n  border-radius: 14px;\\n  background-color: rgb(95,158,160);\\n  font-weight: bolder;\\n  font-size: 20px;\\n}\\n\\na {\\n  font-size: 20px;\\n  font-family: 'Love Ya Like A Sister', cursive;\\n  text-decoration: none;\\n  color: black;\\n  font-weight: bold;\\n}\\n\\n.widgetClass{\\n  margin-top: 65px;\\n}\\n\"","module.exports = \"<div class=\\\"container mb-4\\\">\\n  <div class=\\\"row my-3\\\">\\n    <div *ngFor=\\\"let topic of topics\\\" class=\\\"d-inline mr-1\\\">\\n      <a [ngClass]=\\\"{'liSelected':topic.id == topicId}\\\"\\n         class=\\\"my-auto p-2 disabled liSelected\\\"\\n         routerLink=\\\"/course/{{courseId}}/module/{{moduleId}}/lesson/{{lessonId}}/topic/{{topic.id}}\\\">\\n        {{topic.title}}</a>\\n    </div>\\n  </div>\\n  <div class=\\\"row widgetClass\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <app-widget-list></app-widget-list>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {TopicServiceClient} from '../services/topic.service.client';\n\n@Component({\n  selector: 'app-topic-pills',\n  templateUrl: './topic-pills.component.html',\n  styleUrls: ['./topic-pills.component.css']\n})\nexport class TopicPillsComponent implements OnInit {\n\n  constructor(private service: TopicServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  moduleId;\n  lessonId;\n  courseId;\n  topicId;\n  topics = [];\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.lessonId = params['lessonId'];\n    this.topicId = params['topicId'];\n    this.loadTopics(this.courseId, this.moduleId,this.lessonId);\n  }\n\n  loadTopics(courseId, moduleId, lessonId) {\n    this.lessonId = lessonId;\n    this.service.findAllTopicsForLesson(courseId, moduleId, lessonId)\n      .then(topics => this.topics = topics);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n\\n.fas\\n{\\n  margin-left: 5px;\\n}\\na.nav-item-link {\\n  color: white;\\n}\\na {\\n  color: white;\\n}\\na:hover.nav-item-link {\\n  color: white;\\n  cursor: pointer;\\n}\\n\"","module.exports = \"<header class=\\\"navbar navbar-expand-lg bg-dark\\\">\\n  <a class=\\\"navbar-brand text-light\\\" href=\\\"home\\\">\\n    Whiteboard<i class=\\\"fas fa-home\\\"></i>\\n  </a>\\n  <ul class=\\\"navbar-nav ml-auto\\\">\\n    <li class=\\\"nav-item\\\" [hidden]=\\\"!isLoggedIn\\\">\\n      <a class=\\\"btn btn-link nav-link nav-item-link\\\" routerLink=\\\"/profile\\\">Profile<i class=\\\"fas fa-user\\\"></i></a>\\n    </li>\\n    <li class=\\\"nav-item\\\" [hidden]=\\\"!isLoggedIn\\\">\\n      <a class=\\\"btn btn-link nav-link nav-item-link\\\" (click)=\\\"logout()\\\">Logout<i class=\\\"fas fa-sign-out-alt\\\"></i></a>\\n    </li>\\n    <li class=\\\"nav-item\\\" [hidden]=\\\"isLoggedIn\\\">\\n      <a class=\\\"btn btn-link nav-link nav-item-link\\\"\\n         routerLink=\\\"/login\\\">\\n        Login<i class=\\\"fas fa-sign-in-alt\\\"></i>\\n      </a>\\n    </li>\\n    <li class=\\\"nav-item\\\" [hidden]=\\\"isLoggedIn\\\">\\n      <a class=\\\"btn btn-link nav-link nav-item-link\\\"\\n         routerLink=\\\"/register\\\">\\n        Register<i class=\\\"fas fa-user-plus\\\"></i>\\n      </a>\\n    </li>\\n  </ul>\\n</header>\\n<app-course-grid></app-course-grid>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-whiteboard',\n  templateUrl: './whiteboard.component.html',\n  styleUrls: ['./whiteboard.component.css']\n})\nexport class WhiteboardComponent implements OnInit {\n\n\n  isLoggedIn = false;\n\n  constructor(private userService: UserServiceClient, private router: Router) {\n  }\n\n  logout = () =>\n    this.userService.logout()\n      .then(() => this.router.navigate(['login']))\n\n  ngOnInit() {\n    this.userService.authenticate()\n      .then(response => {\n        this.isLoggedIn = response.username !== undefined && response.username !== '';\n      });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div *ngFor=\\\"let widget of widgets\\\">\\n  <div [ngSwitch]=\\\"widget.widgetType\\\">\\n    <div *ngSwitchCase=\\\"'Heading'\\\">\\n      <div [ngSwitch]=\\\"widget.size\\\">\\n        <h1 *ngSwitchCase=\\\"'1'\\\">{{widget.text}}</h1>\\n        <h2 *ngSwitchCase=\\\"'2'\\\">{{widget.text}}</h2>\\n        <h3 *ngSwitchCase=\\\"'3'\\\">{{widget.text}}</h3>\\n      </div>\\n    </div>\\n    <div *ngSwitchCase=\\\"'Paragraph'\\\">\\n      <p>{{widget.text}}</p>\\n    </div>\\n    <div *ngSwitchCase=\\\"'Link'\\\">\\n      <a href=\\\"{{widget.href}}\\\">{{widget.text}}</a>\\n    </div>\\n    <div *ngSwitchCase=\\\"'List'\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item\\\"\\n            *ngFor=\\\"let item of widget.text.split('\\\\n')\\\">\\n          {{item}}\\n        </li>\\n      </ul>\\n    </div>\\n    <div *ngSwitchCase=\\\"'Image'\\\">\\n      <h6>Image</h6>\\n      <img src={{widget.src}}/>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {WidgetServiceClient} from '../services/widget.service.client';\n\n@Component({\n  selector: 'app-widget-list',\n  templateUrl: './widget-list.component.html',\n  styleUrls: ['./widget-list.component.css']\n})\nexport class WidgetListComponent implements OnInit {\n\n  constructor(private service: WidgetServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.setParams(params));\n  }\n\n  context;\n  topicId;\n  widgets = [];\n\n  setParams(params) {\n    this.context = params;\n    this.topicId = params['topicId'];\n    this.loadWidgets(this.topicId);\n  }\n\n  loadWidgets = topicId =>\n    this.service.findWidgetsForTopic(topicId)\n      .then(widgets => this.widgets = widgets)\n\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}